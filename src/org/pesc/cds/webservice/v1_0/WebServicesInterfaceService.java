package org.pesc.cds.webservice.v1_0;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2014-01-23T17:40:43.539-08:00
 * Generated source version: 2.7.0
 * 
 */
@WebServiceClient(name = "WebServicesInterfaceService", 
                  wsdlLocation = "../schemas/CDS_v0.1.wsdl",
                  targetNamespace = "http://service.cds.pesc.org/") 
public class WebServicesInterfaceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.cds.pesc.org/", "WebServicesInterfaceService");
    public final static QName WebServicesInterfacePort = new QName("http://service.cds.pesc.org/", "WebServicesInterfacePort");
    static {
        URL url = WebServicesInterfaceService.class.getResource("../schemas/CDS_v0.1.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(WebServicesInterfaceService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "../schemas/CDS_v0.1.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public WebServicesInterfaceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WebServicesInterfaceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WebServicesInterfaceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns WebServicesInterface
     */
    @WebEndpoint(name = "WebServicesInterfacePort")
    public WebServicesInterface getWebServicesInterfacePort() {
        return super.getPort(WebServicesInterfacePort, WebServicesInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebServicesInterface
     */
    @WebEndpoint(name = "WebServicesInterfacePort")
    public WebServicesInterface getWebServicesInterfacePort(WebServiceFeature... features) {
        return super.getPort(WebServicesInterfacePort, WebServicesInterface.class, features);
    }

}
