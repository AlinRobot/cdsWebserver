<?xml version="1.0" encoding="UTF-8" ?>
<beans       xmlns="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
       <property name="basename" value="messages/messages" />
    </bean>
    
    <!-- using thymeleaf templates instead of jsp -->
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        
        <!-- for now don't cache (while in dev) -->
        <property name="cacheable" value="false" />
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
        <property name="additionalDialects">
        	<set>
        		<bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect" />
        	</set>
        </property>
    </bean>
    
    <!-- workaround for having thymeleaf and JSON output -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false" />
        <property name="ignoreAcceptHeader" value="true" />
        <property name="defaultContentType" value="text/html" />
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html" />
                <entry key="json" value="application/json" />
            </map>
        </property>
    </bean>
    
    <!-- the class that manages the template and json view resolvers -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager" />
        <property name="viewResolvers">
            <list>
                <!-- view resolver for thymeleaf templates -->
                <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine" />
                </bean>
                <!-- view resolver for json output -->
                <bean class="org.pesc.cds.directoryserver.view.JsonViewResolver"/>
            </list>
        </property>
    </bean>
    
</beans>